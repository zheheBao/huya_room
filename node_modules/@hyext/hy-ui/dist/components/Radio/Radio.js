function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

import React, { Component } from 'react';
import { View } from 'react-native';
import styles from './styles';
import { Icon } from '../Icon';
import variables from '../../common/styles/variables';

var Radio = /*#__PURE__*/function (_Component) {
  _inheritsLoose(Radio, _Component);

  // 选项子元素
  function Radio(props) {
    var _this;

    _this = _Component.call(this, props) || this;

    _this.handleChange = function (value) {
      _this.props.onChange && _this.props.onChange(value);
    };

    return _this;
  }

  var _proto = Radio.prototype;

  /**
   * 检查是否选中
   */
  _proto.verifyChecked = function verifyChecked(props) {
    var value = props.value;
    return this.props.value === value ? true : false;
  };

  _proto.renderChildren = function renderChildren() {
    var _this2 = this;

    return React.Children.map(this.props.children, function (child, index) {
      // 需要子组件自己定义了 displayName
      if (child.type.displayName === 'RadioItem') {
        var checked = _this2.verifyChecked(child.props);

        return /*#__PURE__*/React.cloneElement(child, {
          key: index,
          iconPosition: _this2.props.iconPosition,
          checked: checked,
          onChange: _this2.handleChange,
          checkedIcon: _this2.props.checkedIcon,
          uncheckedIcon: _this2.props.uncheckedIcon
        });
      } else {
        return /*#__PURE__*/React.cloneElement(child);
      }
    });
  };

  _proto.render = function render() {
    return /*#__PURE__*/React.createElement(View, {
      style: [styles.radioContainer, this.props.style]
    }, this.renderChildren());
  };

  return Radio;
}(Component);

Radio.displayName = 'Radio';
Radio.defaultProps = {
  style: {},
  value: undefined,
  onChange: null,
  iconPosition: 'left',
  checkedIcon: /*#__PURE__*/React.createElement(Icon, {
    source: require("../../common/images/icons/check.png"),
    size: variables.hyFontSizeM,
    tintColor: variables.hyBrandPrimaryDark
  }),
  uncheckedIcon: /*#__PURE__*/React.createElement(View, {
    style: {
      width: variables.hyFontSizeM,
      height: variables.hyFontSizeM
    }
  })
};
export { Radio as default };