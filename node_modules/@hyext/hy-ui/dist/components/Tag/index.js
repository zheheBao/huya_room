function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

import React from 'react';
import { Text, View } from 'react-native';
import tagStyles from './styles';
export { tagStyles };
import variables from '../../common/styles/variables';
export var Tag = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(Tag, _React$Component);

  function Tag() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = Tag.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        type = _this$props.type,
        style = _this$props.style,
        children = _this$props.children,
        textColorInverse = _this$props.textColorInverse,
        textStyle = _this$props.textStyle;
    var styleWrapper = tagStyles[type + 'Wrapper'] || tagStyles.defaultWrapper;
    var styleText = tagStyles[type + 'Text'] || tagStyles.defaultText;
    var reverseStyle = textColorInverse && type !== 'default' ? {
      color: variables.hyGrayBase
    } : {};
    return /*#__PURE__*/React.createElement(View, {
      style: [styleWrapper, style]
    }, /*#__PURE__*/React.isValidElement(children) ? children : /*#__PURE__*/React.createElement(Text, {
      style: [styleText, reverseStyle, textStyle]
    }, children));
  };

  return Tag;
}(React.Component);
Tag.defaultProps = {
  type: 'default',
  style: {},
  textColorInverse: false,
  textStyle: {}
};