function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

import React from 'react';
import { View, ScrollView, Text, TouchableOpacity, Dimensions, SafeAreaView } from 'react-native';
import { SlideModal } from '../SlideModal';
import actionsheetStyles from './styles';
export { actionsheetStyles };
var window = Dimensions.get('window');
export var Actionsheet = /*#__PURE__*/function (_SlideModal) {
  _inheritsLoose(Actionsheet, _SlideModal);

  function Actionsheet(props) {
    return _SlideModal.call(this, props) || this;
  }

  var _proto = Actionsheet.prototype;

  _proto.getHeader = function getHeader() {
    var styles = actionsheetStyles;
    var header = this.props.header;
    return /*#__PURE__*/React.isValidElement(header) ? header : /*#__PURE__*/React.createElement(View, {
      style: styles.header
    }, /*#__PURE__*/React.createElement(Text, {
      style: styles.title
    }, header));
  };

  _proto.getBody = function getBody() {
    var _this = this;

    var _this$props = this.props,
        data = _this$props.data,
        maxShowNum = _this$props.maxShowNum,
        renderItem = _this$props.renderItem;
    var styles = actionsheetStyles;
    return /*#__PURE__*/React.createElement(ScrollView, {
      style: [styles.body, maxShowNum != null ? {
        maxHeight: 50 * maxShowNum + 30
      } : {}],
      alwaysBounceVertical: maxShowNum != null
    }, data.map(function (item, index) {
      var tmpStyle = index === data.length - 1 ? {
        borderBottomWidth: 0
      } : {};
      return /*#__PURE__*/React.createElement(TouchableOpacity, {
        key: index,
        onPress: function onPress() {
          _this.handlePress('confirm', item, index);
        }
      }, renderItem ? renderItem(item, index) : /*#__PURE__*/React.createElement(View, {
        style: [styles.item, tmpStyle]
      }, /*#__PURE__*/React.createElement(Text, {
        style: styles.itemText
      }, typeof item === 'object' ? item['label'] : item)));
    }));
  };

  _proto.handlePress = function handlePress(type, item, index) {
    var _this2 = this;

    var callbackName = 'onPress' + type.slice(0, 1).toUpperCase() + type.slice(1);
    this.close().then(function () {
      _this2.props[callbackName] && _this2.props[callbackName](item, index);
    })["catch"](function (e) {
      console.log(e);
    });
  };

  _proto.getFooter = function getFooter() {
    var _this3 = this;

    var footer = this.props.footer;
    var styles = actionsheetStyles;
    return /*#__PURE__*/React.createElement(TouchableOpacity, {
      style: {
        marginTop: 4
      },
      onPress: function onPress() {
        _this3.handlePress('cancel');
      }
    }, footer && /*#__PURE__*/React.isValidElement(footer) ? footer : /*#__PURE__*/React.createElement(View, {
      style: [styles.item, {
        borderBottomWidth: 0
      }]
    }, /*#__PURE__*/React.createElement(Text, {
      style: styles.itemText
    }, footer)));
  };

  _proto.getContent = function getContent() {
    var styles = actionsheetStyles;
    var inner = /*#__PURE__*/React.createElement(View, {
      style: [styles.container, {
        width: window.width
      }]
    }, this.getHeader(), this.getBody(), this.getFooter(), this.props.useSafeAreaView ? /*#__PURE__*/React.createElement(View, {
      style: {
        maxHeight: 30
      },
      onLayout: function onLayout(e) {// const { height } = e.nativeEvent.layout
        // console.log('Actionsheet SafeAreaView height: ', height)
      }
    }, /*#__PURE__*/React.createElement(SafeAreaView, {
      style: {
        flex: 1
      }
    }, /*#__PURE__*/React.createElement(View, {
      style: {
        height: 60
      }
    }))) : null);
    return SlideModal.prototype.getContent.call(this, inner);
  };

  return Actionsheet;
}(SlideModal);
Actionsheet.defaultProps = _objectSpread(_objectSpread({}, SlideModal.defaultProps), {}, {
  cancelable: true,
  maxShowNum: null,
  header: '标题',
  footer: '取消',
  useSafeAreaView: true,
  data: [],
  renderItem: null,
  onPressCancel: null,
  onPressConfirm: null
});