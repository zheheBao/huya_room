function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

import React, { Component } from 'react';
import { Text, View, StyleSheet, Animated } from 'react-native';
import variables from '../../common/styles/variables';
import formStyles from './styles';
import { FadeAnimated } from "../../common/animations";
var styles = StyleSheet.create(formStyles);
export var FormItem = /*#__PURE__*/function (_Component) {
  _inheritsLoose(FormItem, _Component);

  function FormItem(props) {
    var _this;

    _this = _Component.call(this, props) || this;
    _this.animated = null;

    _this.renderItem = function () {
      var children = _this.props.children && Array.isArray(_this.props.children) ? _this.props.children : [_this.props.children];
      return /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(View, {
        style: [styles.formItem, _this.props.style]
      }, _this.props.label && /*#__PURE__*/React.createElement(View, {
        style: styles.container
      }, /*#__PURE__*/React.isValidElement(_this.props.label) ? _this.props.label : /*#__PURE__*/React.createElement(View, {
        style: [styles.label, {
          width: _this.props.labelWidth
        }]
      }, /*#__PURE__*/React.createElement(Text, {
        style: styles.labelText
      }, _this.props.label)), /*#__PURE__*/React.createElement(View, {
        style: [styles.control]
      }, children[0])), [].slice.call(children, 1).length ? /*#__PURE__*/React.createElement(View, {
        style: styles.others
      }, [].slice.call(children, 1)) : null, _this.isShowError(_this.props) ? /*#__PURE__*/React.createElement(Animated.View, {
        style: {
          opacity: _this.animated.getState().opacity,
          transform: [{
            scale: _this.animated.getState().scale
          }]
        }
      }, /*#__PURE__*/React.createElement(Text, {
        style: styles.errorText
      }, _this.props.error[_this.props.__firstErrorIndex])) : null), _this.props.hasLine ? /*#__PURE__*/React.createElement(View, {
        style: styles.line
      }) : null);
    };

    _this.animated = new FadeAnimated({});
    return _this;
  }

  var _proto = FormItem.prototype;

  _proto.componentDidMount = function componentDidMount() {
    if (this.isShowError(this.props)) {
      this.animated.toIn();
    }
  };

  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    var props = this.props;

    if (props.__valid !== nextProps.__valid && this.isShowError(nextProps)) {
      this.animated.toIn();
    }
  };

  _proto.isShowError = function isShowError(props) {
    return !props.__valid && !props.hiddenError;
  };

  _proto.render = function render() {
    return this.renderItem();
  };

  return FormItem;
}(Component);
FormItem.defaultProps = {
  style: {},
  label: '标题',
  labelWidth: variables.formItemLabelWidth,
  hasLine: false,
  validate: null,
  name: '',
  error: [],
  __valid: true,
  hiddenError: false
};
FormItem.displayName = 'FormItem';